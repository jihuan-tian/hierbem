<map id="LaplaceBEM::Erichsen1996Efficient::Example2" name="LaplaceBEM::Erichsen1996Efficient::Example2">
<area shape="rect" id="node2" href="$classLaplaceBEM_1_1LaplaceKernel_1_1SingleLayerKernel.html" title="{LaplaceBEM::LaplaceKernel\l::SingleLayerKernel\&lt; 3 \&gt;\n||+ SingleLayerKernel()\l+ value()\l}" alt="" coords="216,6632,403,6739"/>
<area shape="rect" id="node3" href="$classLaplaceBEM_1_1LaplaceKernel_1_1KernelFunction.html" title="{LaplaceBEM::LaplaceKernel\l::KernelFunction\&lt; dim,\l double \&gt;\n|+ kernel_type\l+ n_components\l+ dimension\l|+ KernelFunction()\l+ ~KernelFunction()\l+ operator=()\l+ value()\l+ vector_value()\l+ value_list()\l+ vector_value_list()\l}" alt="" coords="216,5289,403,5513"/>
<area shape="rect" id="node26" href="$classLaplaceBEM_1_1LaplaceKernel_1_1DoubleLayerKernel.html" title="{LaplaceBEM::LaplaceKernel\l::DoubleLayerKernel\&lt; 3 \&gt;\n||+ DoubleLayerKernel()\l+ value()\l}" alt="" coords="427,6632,613,6739"/>
<area shape="rect" id="node5" href="$classLaplaceBEM_1_1LaplaceKernel_1_1KernelFunction.html" title="{LaplaceBEM::LaplaceKernel\l::KernelFunction\&lt; dim,\l RangeNumberType \&gt;\n|+ kernel_type\l+ n_components\l+ dimension\l|+ KernelFunction()\l+ ~KernelFunction()\l+ operator=()\l+ value()\l+ vector_value()\l+ value_list()\l+ vector_value_list()\l}" alt="" coords="279,4196,465,4420"/>
<area shape="rect" id="node6" href="$classLaplaceBEM_1_1LaplaceKernel_1_1SingleLayerKernel.html" title="{LaplaceBEM::LaplaceKernel\l::SingleLayerKernel\&lt; dim,\l RangeNumberType \&gt;\n||+ SingleLayerKernel()\l+ value()\l}" alt="" coords="5,5341,192,5462"/>
<area shape="rect" id="node27" href="$classLaplaceBEM_1_1LaplaceKernel_1_1DoubleLayerKernel.html" title="{LaplaceBEM::LaplaceKernel\l::DoubleLayerKernel\&lt; dim,\l RangeNumberType \&gt;\n||+ DoubleLayerKernel()\l+ value()\l}" alt="" coords="427,5341,613,5462"/>
<area shape="rect" id="node7" href="$classBlockClusterTree.html" title="{BlockClusterTree\&lt; 3 \&gt;\n|+ child_num\l&#45; leaf_set\l&#45; near_field_set\l&#45; far_field_set\l&#45; n_min\l&#45; eta\l&#45; depth\l&#45; max_level\l&#45; node_num\l&#45; is_subtree\l|+ DeclException2()\l* BlockClusterTree()\l* BlockClusterTree()\l* BlockClusterTree()\l* BlockClusterTree()\l* BlockClusterTree()\l* BlockClusterTree()\l* BlockClusterTree()\l* BlockClusterTree()\l* operator=()\l* operator=()\l* ~BlockClusterTree()\l* release()\l* clear()\l* partition_tensor_product()\l* partition_coarse_non\l_tensor_product()\l* partition_fine_non\l_tensor_product()\l* partition()\l* partition()\l* extend_finer_than_partition()\l* extend_to_finer_partition()\l* prune_descendants_from_node()\l* prune_to_partition()\l* get_root()\l* get_leaf_set()\l* get_leaf_set()\l* build_leaf_set()\l* write_leaf_set()\l* write_leaf_set()\l* get_near_field_set()\l* get_near_field_set()\l* get_far_field_set()\l* get_far_field_set()\l* get_n_min()\l* get_eta()\l* get_depth()\l* calc_depth_and_max\l_level()\l* get_max_level()\l* get_node_num()\l* set_node_num()\l* increase_node_num()\l* decrease_node_num()\l* categorize_near_and\l_far_field_sets()\l* partition_tensor_product\l_from_block_cluster_node()\l* partition_coarse_non\l_tensor_product_from\l_block_cluster_node()\l* partition_fine_non\l_tensor_product_from\l_block_cluster_node()\l* partition_fine_non\l_tensor_product_from\l_block_cluster_node_N()\l* partition_fine_non\l_tensor_product_from\l_block_cluster_node_Nstar()\l* partition_from_block\l_cluster_node()\l* partition_from_block\l_cluster_node()\l* find_leaf_bc_node_not\l_subset_of_bc_nodes_in\l_partition()\l* find_leaf_bc_node_not\l_in_partition()\l}" alt="" coords="638,6075,858,7296"/>
<area shape="rect" id="node8" href="$classTreeNode.html" title="{TreeNode\&lt; BlockCluster\l\&lt; spacedim, double \&gt;,\l BlockClusterTree\&lt; spacedim,\l double \&gt;::child_num \&gt;\n|&#45; level\l&#45; children\l&#45; child_num\l&#45; split_mode\l|+ TreeNode()\l+ TreeNode()\l+ TreeNode()\l+ TreeNode()\l+ get_child_pointer()\l+ set_child_pointer()\l+ get_child_num()\l+ set_child_num()\l+ increase_child_num()\l+ decrease_child_num()\l+ Parent()\l+ Parent()\l+ get_data_pointer()\l+ get_data_pointer()\l+ get_data_reference()\l+ get_data_reference()\l+ get_level()\l+ set_level()\l+ is_leaf()\l+ is_root()\l+ get_split_mode()\l+ set_split_mode()\l+ operator==()\l* TreeNode()\l* TreeNode()\l* TreeNode()\l* TreeNode()\l* get_child_pointer()\l* set_child_pointer()\l* get_child_num()\l* set_child_num()\l* increase_child_num()\l* decrease_child_num()\l* Parent()\l* Parent()\l* get_data_pointer()\l* get_data_pointer()\l* get_data_reference()\l* get_data_reference()\l* get_level()\l* set_level()\l* is_leaf()\l* is_root()\l* get_split_mode()\l* set_split_mode()\l* operator==()\l}" alt="" coords="885,4989,1083,5814"/>
<area shape="rect" id="node9" href="$classTreeNode.html" title="Class for general tree node. " alt="" coords="926,3015,1087,3796"/>
<area shape="rect" id="node24" href="$classTreeNode.html" title="{TreeNode\&lt; BlockCluster\l\&lt; spacedim, Number \&gt;,\l BlockClusterTree\&lt; spacedim,\l Number \&gt;::child_num \&gt;\n|&#45; data\l&#45; level\l&#45; children\l&#45; child_num\l&#45; split_mode\l|+ TreeNode()\l+ TreeNode()\l+ TreeNode()\l+ TreeNode()\l+ get_child_pointer()\l+ set_child_pointer()\l+ get_child_num()\l+ set_child_num()\l+ increase_child_num()\l+ decrease_child_num()\l+ Parent()\l+ Parent()\l+ get_data_pointer()\l+ get_data_pointer()\l+ get_data_reference()\l+ get_data_reference()\l+ get_level()\l+ set_level()\l+ is_leaf()\l+ is_root()\l+ get_split_mode()\l+ set_split_mode()\l+ operator==()\l* TreeNode()\l* TreeNode()\l* TreeNode()\l* TreeNode()\l* get_child_pointer()\l* set_child_pointer()\l* get_child_num()\l* set_child_num()\l* increase_child_num()\l* decrease_child_num()\l* Parent()\l* Parent()\l* get_data_pointer()\l* get_data_pointer()\l* get_data_reference()\l* get_data_reference()\l* get_level()\l* set_level()\l* is_leaf()\l* is_root()\l* get_split_mode()\l* set_split_mode()\l* operator==()\l}" alt="" coords="591,3888,790,4728"/>
<area shape="rect" id="node18" href="$classBinaryTreeNode.html" title="Class for binary tree node. " alt="" coords="1159,395,1321,1176"/>
<area shape="rect" id="node11" href="$classBlockCluster.html" title="{BlockCluster\&lt; spacedim,\l double \&gt;\n|&#45; cluster_distance\l&#45; is_near_field\l&#45; is_admissible\l|+ BlockCluster()\l+ BlockCluster()\l+ is_subset()\l+ is_proper_subset()\l+ is_superset()\l+ is_proper_superset()\l+ intersect()\l+ has_intersection()\l+ check_is_near_field()\l+ is_small()\l+ check_is_admissible()\l+ check_is_admissible()\l+ is_admissible_or_small()\l+ is_admissible_or_small()\l+ get_is_near_field()\l+ set_is_near_field()\l+ get_is_admissible()\l+ set_is_admissible()\l+ get_tau_node()\l+ get_tau_node()\l+ get_sigma_node()\l+ get_sigma_node()\l* BlockCluster()\l* BlockCluster()\l* is_subset()\l* is_proper_subset()\l* is_superset()\l* is_proper_superset()\l* intersect()\l* has_intersection()\l* check_is_near_field()\l* is_small()\l* check_is_admissible()\l* check_is_admissible()\l* is_admissible_or_small()\l* is_admissible_or_small()\l* get_is_near_field()\l* set_is_near_field()\l* get_is_admissible()\l* set_is_admissible()\l* get_tau_node()\l* get_tau_node()\l* get_sigma_node()\l* get_sigma_node()\l}" alt="" coords="814,3932,991,4684"/>
<area shape="rect" id="node12" href="$classClusterTree.html" title="{ClusterTree\&lt; spacedim,\l double \&gt;\n|+ child_num\l&#45; leaf_set\l&#45; depth\l&#45; max_level\l&#45; n_min\l&#45; node_num\l|+ ClusterTree()\l+ ClusterTree()\l+ ClusterTree()\l+ ClusterTree()\l+ ClusterTree()\l+ ~ClusterTree()\l+ release()\l+ operator=()\l+ operator=()\l+ partition()\l+ partition()\l+ partition()\l+ get_root()\l+ get_leaf_set()\l+ get_leaf_set()\l+ build_leaf_set()\l+ get_n_min()\l+ get_depth()\l+ get_max_level()\l+ get_node_num()\l&#45; partition_from_cluster_node()\l&#45; partition_from_cluster_node()\l&#45; partition_from_cluster_node()\l}" alt="" coords="1181,3161,1379,3649"/>
<area shape="rect" id="node13" href="$classBinaryTreeNode.html" title="{BinaryTreeNode\&lt; Cluster\l\&lt; spacedim, double \&gt; \&gt;\n|&#45; level\l&#45; child_num\l|+ BinaryTreeNode()\l+ BinaryTreeNode()\l+ BinaryTreeNode()\l+ Left()\l+ Left()\l+ Right()\l+ Right()\l+ get_child_pointer()\l+ get_child_num()\l+ set_child_num()\l+ increase_child_num()\l+ decrease_child_num()\l+ Parent()\l+ Parent()\l+ set_child_pointer()\l+ get_data_pointer()\l+ get_data_pointer()\l+ get_data_reference()\l+ get_data_reference()\l+ get_level()\l+ set_level()\l+ is_leaf()\l+ is_root()\l+ operator==()\l* BinaryTreeNode()\l* BinaryTreeNode()\l* BinaryTreeNode()\l* Left()\l* Left()\l* Right()\l* Right()\l* get_child_pointer()\l* get_child_num()\l* set_child_num()\l* increase_child_num()\l* decrease_child_num()\l* Parent()\l* Parent()\l* set_child_pointer()\l* get_data_pointer()\l* get_data_pointer()\l* get_data_reference()\l* get_data_reference()\l* get_level()\l* set_level()\l* is_leaf()\l* is_root()\l* operator==()\l}" alt="" coords="1395,2156,1565,2952"/>
<area shape="rect" id="node25" href="$classClusterTree.html" title="{ClusterTree\&lt; 3 \&gt;\n|+ child_num\l&#45; leaf_set\l&#45; depth\l&#45; max_level\l&#45; n_min\l&#45; node_num\l|+ ClusterTree()\l+ ClusterTree()\l+ ClusterTree()\l+ ClusterTree()\l+ ClusterTree()\l+ ~ClusterTree()\l+ release()\l+ operator=()\l+ operator=()\l+ partition()\l+ partition()\l+ partition()\l+ get_root()\l+ get_leaf_set()\l+ get_leaf_set()\l+ build_leaf_set()\l+ get_n_min()\l+ get_depth()\l+ get_max_level()\l+ get_node_num()\l&#45; partition_from_cluster_node()\l&#45; partition_from_cluster_node()\l&#45; partition_from_cluster_node()\l}" alt="" coords="1403,3169,1602,3642"/>
<area shape="rect" id="node14" href="$classCluster.html" title="{Cluster\&lt; spacedim,\l double \&gt;\n|&#45; index_set\l&#45; diameter\l|+ Cluster()\l+ Cluster()\l+ Cluster()\l+ Cluster()\l+ Cluster()\l+ Cluster()\l+ Cluster()\l+ get_index_set()\l+ get_index_set()\l+ get_bounding_box()\l+ get_bounding_box()\l+ get_diameter()\l+ calc_diameter()\l+ calc_diameter()\l+ distance_to_cluster()\l+ distance_to_cluster()\l+ is_subset()\l+ is_proper_subset()\l+ is_superset()\l+ is_proper_superset()\l+ intersect()\l+ has_intersection()\l+ get_cardinality()\l+ is_large()\l* Cluster()\l* Cluster()\l* Cluster()\l* Cluster()\l* Cluster()\l* Cluster()\l* Cluster()\l* get_index_set()\l* get_index_set()\l* get_bounding_box()\l* get_bounding_box()\l* get_diameter()\l* calc_diameter()\l* calc_diameter()\l* distance_to_cluster()\l* distance_to_cluster()\l* is_subset()\l* is_proper_subset()\l* is_superset()\l* is_proper_superset()\l* intersect()\l* has_intersection()\l* get_cardinality()\l* is_large()\l}" alt="" coords="1545,1290,1700,2086"/>
<area shape="rect" id="node15" href="$classSimpleBoundingBox.html" title="{SimpleBoundingBox\&lt;\l spacedim, double \&gt;\n|&#45; boundary_points\l|+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ volume()\l+ get_boundary_points()\l+ get_boundary_points()\l+ point_inside()\l+ coordinate_index_with\l_longest_dimension()\l+ divide_geometrically()\l&#45; calculate_bounding_box()\l&#45; calculate_bounding_box()\l}" alt="" coords="1410,629,1587,941"/>
<area shape="rect" id="node16" href="$classSimpleBoundingBox.html" title="{SimpleBoundingBox\&lt;\l spacedim, Number \&gt;\n|&#45; boundary_points\l|+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ SimpleBoundingBox()\l+ volume()\l+ get_boundary_points()\l+ get_boundary_points()\l+ point_inside()\l+ coordinate_index_with\l_longest_dimension()\l+ divide_geometrically()\l&#45; calculate_bounding_box()\l&#45; calculate_bounding_box()\l}" alt="" coords="1410,5,1587,317"/>
<area shape="rect" id="node17" href="$classCluster.html" title="Class for an index cluster. " alt="" coords="1612,380,1767,1191"/>
<area shape="rect" id="node20" href="$classBinaryTreeNode.html" title="{BinaryTreeNode\&lt; Cluster\l\&lt; spacedim, Number \&gt; \&gt;\n|&#45; data\l&#45; level\l&#45; child_num\l|+ BinaryTreeNode()\l+ BinaryTreeNode()\l+ BinaryTreeNode()\l+ Left()\l+ Left()\l+ Right()\l+ Right()\l+ get_child_pointer()\l+ get_child_num()\l+ set_child_num()\l+ increase_child_num()\l+ decrease_child_num()\l+ Parent()\l+ Parent()\l+ set_child_pointer()\l+ get_data_pointer()\l+ get_data_pointer()\l+ get_data_reference()\l+ get_data_reference()\l+ get_level()\l+ set_level()\l+ is_leaf()\l+ is_root()\l+ operator==()\l* BinaryTreeNode()\l* BinaryTreeNode()\l* BinaryTreeNode()\l* Left()\l* Left()\l* Right()\l* Right()\l* get_child_pointer()\l* get_child_num()\l* set_child_num()\l* increase_child_num()\l* decrease_child_num()\l* Parent()\l* Parent()\l* set_child_pointer()\l* get_data_pointer()\l* get_data_pointer()\l* get_data_reference()\l* get_data_reference()\l* get_level()\l* set_level()\l* is_leaf()\l* is_root()\l* operator==()\l}" alt="" coords="1083,1283,1253,2093"/>
<area shape="rect" id="node19" href="$classClusterTree.html" title="Class for cluster tree. " alt="" coords="1079,2310,1278,2798"/>
<area shape="rect" id="node21" href="$classBlockCluster.html" title="Class for block cluster. " alt="" coords="658,3022,835,3789"/>
<area shape="rect" id="node23" href="$classBlockClusterTree.html" title="Class for block cluster tree. " alt="" coords="638,4791,858,6012"/>
</map>
