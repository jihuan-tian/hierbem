g[1,2] : g[2,1];
g[1,3] : g[3,1];
g[2,3] : g[3,2];

interior_product : expand(
  matrix(
    [g[2,2]*g[3,3] - g[3,2]*g[2,3], g[3,2]*g[1,3] - g[1,2]*g[3,3], g[1,2]*g[2,3] - g[2,2]*g[1,3]],
    [g[3,1]*g[2,3] - g[2,1]*g[3,3], g[1,1]*g[3,3] - g[3,1]*g[1,3], g[2,1]*g[1,3] - g[1,1]*g[2,3]],
    [g[2,1]*g[3,2] - g[3,1]*g[2,2], g[3,1]*g[1,2] - g[1,1]*g[3,2], g[1,1]*g[2,2] - g[2,1]*g[1,2]])
  . matrix([u[2]*v[3] - u[3]*v[2]], [u[3]*v[1] - u[1]*v[3]], [u[1]*v[2] - u[2]*v[1]]));

alpha_wedge_beta : expand(
  matrix(
    [sum(g[2,j]*u[j],j, 1, 3) * sum(g[3,j]*v[j],j, 1, 3) - sum(g[2,j]*v[j],j, 1, 3) * sum(g[3,j]*u[j],j, 1, 3)],
    [sum(g[3,j]*u[j],j, 1, 3) * sum(g[1,j]*v[j],j, 1, 3) - sum(g[3,j]*v[j],j, 1, 3) * sum(g[1,j]*u[j],j, 1, 3)],
    [sum(g[1,j]*u[j],j, 1, 3) * sum(g[2,j]*v[j],j, 1, 3) - sum(g[1,j]*v[j],j, 1, 3) * sum(g[2,j]*u[j],j, 1, 3)]));

is(interior_product = alpha_wedge_beta);
