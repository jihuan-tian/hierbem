// Copyright (C) 2023-2025 Jihuan Tian <jihuan_tian@hotmail.com>
//
// This file is part of the HierBEM library.
//
// HierBEM is free software: you can use it, redistribute it and/or modify it
// under the terms of the GNU Lesser General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version. The full text of the license can be found in the
// file LICENSE at the top level directory of HierBEM.

/**
 * @file cu_tensor.hcu
 * @brief Introduction of cu_tensor.hcu
 *
 * @date 2023-02-10
 * @author Jihuan Tian
 */
#ifndef HIERBEM_INCLUDE_LINEAR_ALGEBRA_CU_TENSOR_H_
#define HIERBEM_INCLUDE_LINEAR_ALGEBRA_CU_TENSOR_H_

#include <deal.II/base/template_constraints.h>
#include <deal.II/base/tensor.h>

#include "config.h"
#include "cu_vector.hcu"
#include "platform_shared/tensor.h"

HBEM_NS_OPEN

using namespace dealii;

namespace CUDAWrappers
{
  template <int dim, typename Number1, typename Number2>
  HBEM_ATTR_HOST
    HBEM_ATTR_DEV Tensor<1, dim, typename ProductType<Number1, Number2>::type>
                  cross_product_3d(const Tensor<1, dim, Number1> &src1,
                                   const CUDAVector<Number2>     &src2)
  {
    Tensor<1, dim, typename ProductType<Number1, Number2>::type> result;

    // avoid compiler warnings
    constexpr int s0 = 0 % dim;
    constexpr int s1 = 1 % dim;
    constexpr int s2 = 2 % dim;

    result[s0] = src1[s1] * src2[s2] - src1[s2] * src2[s1];
    result[s1] = src1[s2] * src2[s0] - src1[s0] * src2[s2];
    result[s2] = src1[s0] * src2[s1] - src1[s1] * src2[s0];

    return result;
  }
} // namespace CUDAWrappers

HBEM_NS_CLOSE

#endif // HIERBEM_INCLUDE_LINEAR_ALGEBRA_CU_TENSOR_H_
